import { useEffect, useState } from "react";
import { getTrainings, addTraining, deleteTraining } from "./trainingApi";
import { getCustomers } from "./customerApi"; 
import AddTraining from "./AddTraining";
import { TrainingTable } from "./TrainingTable"; 

export default function TrainingList() {
  // üí° K√§yt√§mme kahta tilaa: yksi treenien ja toinen asiakkaiden tallentamiseen
  const [trainings, setTrainings] = useState([]); // Harjoitusten tilaa
  const [customers, setCustomers] = useState([]); // Asiakkaiden tilaa

  // üí° Funktio datan hakemiseksi
  const loadData = () => {
    // Haetaan sek√§ harjoitukset ett√§ asiakkaat API:sta
    getTrainings()
      .then(setTrainings) // Tallennetaan treenit tilaan
      .catch(console.error); // Virheenk√§sittely
    getCustomers()
      .then(setCustomers) // Tallennetaan asiakkaat tilaan
      .catch(console.error); // Virheenk√§sittely
  };

  // üí° useEffect hook, joka lataa datan komponentin ensimm√§isen render√∂innin j√§lkeen
  useEffect(() => {
    loadData(); // Lataa treenit ja asiakkaat
  }, []); // Tyhj√§ taulukko tarkoittaa, ett√§ t√§m√§ ajetaan vain kerran, kun komponentti ladattu

  // üí° Funktio uuden harjoituksen lis√§√§miseksi
  const handleAddTraining = async (training) => {
    await addTraining(training); // Lis√§t√§√§n uusi harjoitus
    loadData(); // P√§ivitet√§√§n harjoitusten lista
  };

  // üí° Funktio harjoituksen poistamiseksi
  const handleDeleteTraining = async (url) => {
    await deleteTraining(url); // Poistetaan harjoitus
    loadData(); // P√§ivitet√§√§n harjoitusten lista
  };

  return (
    <>
      {/* Lis√§√§ uusi harjoitus */}
      <AddTraining customers={customers} onAdd={handleAddTraining} />
      
      {/* N√§ytet√§√§n harjoitusten taulukko */}
      <TrainingTable trainings={trainings} onDelete={handleDeleteTraining} />
    </>
  );
}
